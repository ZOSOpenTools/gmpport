export ZOPEN_STABLE_URL="https://gmplib.org/download/gmp/gmp-6.3.0.tar.xz"
export ZOPEN_STABLE_DEPS="make"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="core"
export ZOPEN_EXTRA_CONFIGURE_OPTS='--disable-assembly'
export ZOPEN_COMP=CLANG

#
# Several tests of the form:
#
#============================================================================
#Testsuite summary for GNU MP 6.3.0
#============================================================================
# TOTAL: x
# PASS:  y
# SKIP:  z
# XFAIL: a
# FAIL:  b
# XPASS: c
# ERROR: d

sum()
{
  tot=0
  for num in $*; do
    tot=$((tot+num))
  done
  echo $tot
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  summary="$1/$2_summary.log"

  failures=$(grep -E '^# FAIL: ' "${chk}" | awk '{print $3;}')
  passes=$(grep -E '^# PASS: ' "${chk}" | awk '{print $3;}')
  totals=$(grep -E '^# TOTAL: ' "${chk}" | awk '{print $3;}')

  echo "Pass: $(sum ${passes}) Fail: $(sum ${failures}) Total: $(sum ${totals})" >"${summary}"
  echo "actualFailures:$(sum ${failures})"
  echo "totalTests:$(sum ${totals})"
  echo "expectedFailures:0"
  echo "expectedTotalTests:178"
}

zopen_get_version()
{
  # Create C program
  for tmp in "${TMPDIR}" "${TMP}" /tmp; do
    if [ ! -z ${tmp} ] && [ -d ${tmp} ]; then
      break
    fi
  done

  gmptmp="${tmp}/gmp$$"
  gmpc="${gmptmp}/gmpver.c"
  gmpver="${gmptmp}/gmpver"
  mkdir -p "${gmptmp}" || return 8
  cat >"${gmpc}" <<ZZ || return 8
#include "gmp.h"
#include <stdio.h>

int main() {
  printf("%s\n", gmp_version);
  return 0;
}
ZZ
  clang -L./.libs/ -I./ -fzos-le-char-mode=ascii -o"$gmpver" "$gmpc" -lgmp || return 8
  "$gmpver"

  rm -rf "${gmptmp}"
}
